<?xml version="1.0" encoding="UTF-8"?>

<!-- =====================================================================
VersionComponentAi.xml
Generated by fpp-to-xml
====================================================================== -->
<component namespace="Svc" name="Version" kind="passive">

  <import_enum_type>Svc/Version/VersionEnabledEnumAi.xml</import_enum_type>
  <import_enum_type>Svc/Version/VersionTypeEnumAi.xml</import_enum_type>
  <import_enum_type>config/VersionEnumEnumAi.xml</import_enum_type>
  <import_port_type>Fw/Cmd/CmdPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdRegPortAi.xml</import_port_type>
  <import_port_type>Fw/Cmd/CmdResponsePortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
  <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
  <import_port_type>Fw/Tlm/TlmPortAi.xml</import_port_type>
  <import_port_type>Svc/Ports/VersionPorts/VersionPortAi.xml</import_port_type>
  <import_serializable_type>Svc/Version/CustomVersionDbSerializableAi.xml</import_serializable_type>

  <ports>
    <port name="cmdIn" data_type="Fw::Cmd" kind="input" role="Cmd" max_number="1">
      <comment>
      Port for receiving commands
      </comment>
    </port>
    <port name="cmdRegOut" data_type="Fw::CmdReg" kind="output" role="CmdRegistration" max_number="1">
      <comment>
      Port for sending command registrations
      </comment>
    </port>
    <port name="cmdResponseOut" data_type="Fw::CmdResponse" kind="output" role="CmdResponse" max_number="1">
      <comment>
      Port for sending command responses
      </comment>
    </port>
    <port name="getVersion" data_type="Svc::Version" kind="guarded_input" max_number="1">
      <comment>
      Mutexed Port to get values
      </comment>
    </port>
    <port name="logOut" data_type="Fw::Log" kind="output" role="LogEvent" max_number="1">
      <comment>
      Port for sending events to downlink
      </comment>
    </port>
    <port name="logTextOut" data_type="Fw::LogText" kind="output" role="LogTextEvent" max_number="1">
      <comment>
      Port for sending textual representation of events
      </comment>
    </port>
    <port name="setVersion" data_type="Svc::Version" kind="guarded_input" max_number="1">
      <comment>
      Mutexed Port to set values
      </comment>
    </port>
    <port name="timeCaller" data_type="Fw::Time" kind="output" role="TimeGet" max_number="1">
      <comment>
      Port for requesting the current time
      </comment>
    </port>
    <port name="tlmOut" data_type="Fw::Tlm" kind="output" role="Telemetry" max_number="1">
      <comment>
      Port for sending telemetry channels to downlink
      </comment>
    </port>
  </ports>

  <commands>
    <command kind="guarded" opcode="0x0" mnemonic="ENABLE">
      <comment>
      A command to enable or disable Event verbosity and Telemetry
      </comment>
      <args>
        <arg name="enable" type="Svc::VersionEnabled">
          <comment>
          whether or not Version telemetry is enabled
          </comment>
        </arg>
      </args>
    </command>
    <command kind="guarded" opcode="0x1" mnemonic="VERSION">
      <comment>
      Report version as Event
      </comment>
      <args>
        <arg name="version_type" type="Svc::VersionType">
          <comment>
          which version type Event is requested
          </comment>
        </arg>
      </args>
    </command>
  </commands>

  <events>
    <event id="0x0" name="FrameworkVersion" severity="ACTIVITY_LO" format_string="Framework Version: [%s]">
      <comment>
      Version of the git repository.
      </comment>
      <args>
        <arg name="version" type="string" size="40">
          <comment>
          version string
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x1" name="ProjectVersion" severity="ACTIVITY_LO" format_string="Project Version: [%s]">
      <comment>
      Version of the git repository.
      </comment>
      <args>
        <arg name="version" type="string" size="40">
          <comment>
          version string
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x2" name="LibraryVersions" severity="ACTIVITY_LO" format_string="Library Versions: [%s]">
      <comment>
      Version of the git repository.
      </comment>
      <args>
        <arg name="version" type="string" size="40">
          <comment>
          version string
          </comment>
        </arg>
      </args>
    </event>
    <event id="0x3" name="CustomVersions" severity="ACTIVITY_LO" format_string="Custom Versions: [%s] [%s]">
      <comment>
      Version of the git repository.
      </comment>
      <args>
        <arg name="version_enum" type="Svc::VersionCfg::VersionEnum">
          <comment>
          The enum to access
          </comment>
        </arg>
        <arg name="version_value" type="string" size="40">
          <comment>
          version
          </comment>
        </arg>
      </args>
    </event>
  </events>

  <telemetry>
    <channel id="0x0" name="FrameworkVersion" data_type="string" size="40" update="always">
      <comment>
      Software framework version
      </comment>
    </channel>
    <channel id="0x1" name="ProjectVersion" data_type="string" size="40" update="always">
      <comment>
      Software project version
      </comment>
    </channel>
    <channel id="0x2" name="CustomVersion01" data_type="Svc::CustomVersionDb" update="always">
      <comment>
      Custom Versions
      </comment>
    </channel>
    <channel id="0x3" name="CustomVersion02" data_type="Svc::CustomVersionDb" update="always"/>
    <channel id="0x4" name="CustomVersion03" data_type="Svc::CustomVersionDb" update="always"/>
    <channel id="0x5" name="CustomVersion04" data_type="Svc::CustomVersionDb" update="always"/>
    <channel id="0x6" name="CustomVersion05" data_type="Svc::CustomVersionDb" update="always"/>
    <channel id="0x7" name="CustomVersion06" data_type="Svc::CustomVersionDb" update="always"/>
    <channel id="0x8" name="CustomVersion07" data_type="Svc::CustomVersionDb" update="always"/>
    <channel id="0x9" name="CustomVersion08" data_type="Svc::CustomVersionDb" update="always"/>
    <channel id="0xA" name="CustomVersion09" data_type="Svc::CustomVersionDb" update="always"/>
    <channel id="0xB" name="CustomVersion10" data_type="Svc::CustomVersionDb" update="always"/>
    <channel id="0xC" name="LibraryVersion01" data_type="string" size="40" update="always">
      <comment>
      Library Versions
      </comment>
    </channel>
    <channel id="0xD" name="LibraryVersion02" data_type="string" size="40" update="always"/>
    <channel id="0xE" name="LibraryVersion03" data_type="string" size="40" update="always"/>
    <channel id="0xF" name="LibraryVersion04" data_type="string" size="40" update="always"/>
    <channel id="0x10" name="LibraryVersion05" data_type="string" size="40" update="always"/>
    <channel id="0x11" name="LibraryVersion06" data_type="string" size="40" update="always"/>
    <channel id="0x12" name="LibraryVersion07" data_type="string" size="40" update="always"/>
    <channel id="0x13" name="LibraryVersion08" data_type="string" size="40" update="always"/>
    <channel id="0x14" name="LibraryVersion09" data_type="string" size="40" update="always"/>
    <channel id="0x15" name="LibraryVersion10" data_type="string" size="40" update="always"/>
  </telemetry>

</component>
